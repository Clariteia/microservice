service:
    name: Order
rest:
    host: localhost
    port: 8080
    endpoints:
        - name: AddOrder
          route: /order_microservice
          method: POST
          controller: tests.order_microservice.order.RestService
          action: add_order
        - name: GetOrder
          route: /order_microservice
          method: GET
          controller: tests.order_microservice.order.RestService
          action: get_order
repository:
    database: order_db
    user: minos
    password: min0s
    host: localhost
    port: 5432
snapshot:
    database: order_db
    user: minos
    password: min0s
    host: localhost
    port: 5432
events:
    broker: localhost
    port: 9092
    items:
        - name: TicketAdded
          controller: tests.order_microservice.order.CqrsService
          action: ticket_added
        - name: TicketDeleted
          controller: tests.order_microservice.order.CqrsService
          action: ticket_deleted
    queue:
        database: order_db
        user: minos
        password: min0s
        host: localhost
        port: 5432
        records: 10
        retry: 2
commands:
    broker: localhost
    port: 9092
    items:
        - name: AddOrder
          controller: tests.order_microservice.order.CommandService
          action: add_order
        - name: DeleteOrder
          controller: tests.order_microservice.order.CommandService
          action: delete_order
        - name: UpdateOrder
          controller: tests.order_microservice.order.CommandService
          action: update_order
        - name: GetOrder
          controller: tests.order_microservice.order.CommandService
          action: get_order
    queue:
        database: order_db
        user: minos
        password: min0s
        host: localhost
        port: 5432
        records: 10
        retry: 2
saga:
    items:
        - name: AddOrder
          controller: tests.order_microservice.order.SagaService
          action: add_order
        - name: DeleteOrder
          controller: tests.order_microservice.order.SagaService
          action: delete_order
    queue:
        database: order_db
        user: minos
        password: min0s
        host: postgres
        port: 5432
        records: 10
        retry: 2
